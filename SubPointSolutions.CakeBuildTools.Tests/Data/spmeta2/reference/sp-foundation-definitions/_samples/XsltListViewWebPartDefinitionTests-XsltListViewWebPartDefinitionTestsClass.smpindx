<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Web Model</string>
        <string>Web parts</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title />
  <Description />
  <MethodBodyWithFunction>    
    

    
    //[Browsable(false)]
    public class XsltListViewWebPartDefinitionTests : ProvisionTestBase
    {
        #region methods

      
        [TestMethod]
        [TestCategory("Docs.XsltListViewWebPartDefinition")]

        [DisplayName("Add XLVWP binded to list by Title")]
        //[Browsable(false)]
        public void CanBindXsltListViewWebPartByListTitle()
        {
            var inventoryLibrary = new ListDefinition
            {
                Title = "Inventory library",
                Description = "A document library.",
                TemplateType = BuiltInListTemplateTypeId.DocumentLibrary,
                Url = "InventoryLibrary"
            };

            var xsltListView = new XsltListViewWebPartDefinition
            {
                Title = "Inventory Default View by List Title",
                Id = "m2InventoryView",
                ZoneIndex = 10,
                ZoneId = "Main",
                ListTitle = inventoryLibrary.Title
            };

            var webPartPage = new WebPartPageDefinition
            {
                Title = "M2 Xslt List View provision",
                FileName = "xslt-listview-webpart-provision.aspx",
                PageLayoutTemplate = BuiltInWebPartPageTemplates.spstd1
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                  .AddList(inventoryLibrary)
                  .AddHostList(BuiltInListDefinitions.SitePages, list =&gt;
                  {
                      list.AddWebPartPage(webPartPage, page =&gt;
                      {
                          page.AddXsltListViewWebPart(xsltListView);
                      });
                  });
            });

            DeployModel(model);
        }

       
        [TestMethod]
        [TestCategory("Docs.XsltListViewWebPartDefinition")]

        [DisplayName("Add XLVWP binded to list by URL")]
        //[Browsable(false)]
        public void CanBindXsltListViewWebPartByListUrl()
        {
            var booksLibrary = new ListDefinition
            {
                Title = "Books library",
                Description = "A document library.",
                TemplateType = BuiltInListTemplateTypeId.DocumentLibrary,
                Url = "BooksLibrary"
            };

            var xsltListView = new XsltListViewWebPartDefinition
            {
                Title = "Books Default View by List Url",
                Id = "m2BooksView",
                ZoneIndex = 10,
                ZoneId = "Main",
                ListUrl = booksLibrary.GetListUrl()
            };

            var webPartPage = new WebPartPageDefinition
            {
                Title = "M2 Xslt List View provision",
                FileName = "xslt-listview-webpart-provision.aspx",
                PageLayoutTemplate = BuiltInWebPartPageTemplates.spstd1
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                  .AddList(booksLibrary)
                  .AddHostList(BuiltInListDefinitions.SitePages, list =&gt;
                  {
                      list.AddWebPartPage(webPartPage, page =&gt;
                      {
                          page.AddXsltListViewWebPart(xsltListView);
                      });
                  });
            });

            DeployModel(model);
        }

        
        [TestMethod]
        [TestCategory("Docs.XsltListViewWebPartDefinition")]

        [DisplayName("Add XLVWP binded to list view by Title")]
        //[Browsable(false)]
        public void CanBindXsltListViewWebPartByListViewTitle()
        {
            var booksLibrary = new ListDefinition
            {
                Title = "Books library",
                Description = "A document library.",
                TemplateType = BuiltInListTemplateTypeId.DocumentLibrary,
                Url = "BooksLibrary"
            };

            var booksView = new ListViewDefinition
            {
                Title = "Popular Books",
                Fields = new Collection&lt;string&gt;
                {
                    BuiltInInternalFieldNames.Edit,
                    BuiltInInternalFieldNames.ID,
                    BuiltInInternalFieldNames.FileLeafRef
                },
                RowLimit = 10
            };

            var xsltListView = new XsltListViewWebPartDefinition
            {
                Title = "Popular Books binding by List View Title",
                Id = "m2PopularBooksView",
                ZoneIndex = 10,
                ZoneId = "Main",
                ListUrl = booksLibrary.GetListUrl(),
                ViewName = booksView.Title
            };

            var webPartPage = new WebPartPageDefinition
            {
                Title = "M2 Xslt List View provision",
                FileName = "xslt-listview-webpart-provision.aspx",
                PageLayoutTemplate = BuiltInWebPartPageTemplates.spstd1
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                  .AddList(booksLibrary, list =&gt;
                  {
                      list.AddListView(booksView);
                  })
                  .AddHostList(BuiltInListDefinitions.SitePages, list =&gt;
                  {
                      list.AddWebPartPage(webPartPage, page =&gt;
                      {
                          page.AddXsltListViewWebPart(xsltListView);
                      });
                  });
            });

            DeployModel(model);
        }

        #endregion
    }</MethodBodyWithFunction>
  <MethodBody>//[Browsable(false)]
public class XsltListViewWebPartDefinitionTests : ProvisionTestBase
{
    #region methods


    [TestMethod]
    [TestCategory("Docs.XsltListViewWebPartDefinition")]

    [DisplayName("Add XLVWP binded to list by Title")]
    //[Browsable(false)]
    public void CanBindXsltListViewWebPartByListTitle()
    {
        var inventoryLibrary = new ListDefinition
        {
            Title = "Inventory library",
            Description = "A document library.",
            TemplateType = BuiltInListTemplateTypeId.DocumentLibrary,
            Url = "InventoryLibrary"
        };

        var xsltListView = new XsltListViewWebPartDefinition
        {
            Title = "Inventory Default View by List Title",
            Id = "m2InventoryView",
            ZoneIndex = 10,
            ZoneId = "Main",
            ListTitle = inventoryLibrary.Title
        };

        var webPartPage = new WebPartPageDefinition
        {
            Title = "M2 Xslt List View provision",
            FileName = "xslt-listview-webpart-provision.aspx",
            PageLayoutTemplate = BuiltInWebPartPageTemplates.spstd1
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
              .AddList(inventoryLibrary)
              .AddHostList(BuiltInListDefinitions.SitePages, list =&gt;
              {
                  list.AddWebPartPage(webPartPage, page =&gt;
                  {
                      page.AddXsltListViewWebPart(xsltListView);
                  });
              });
        });

        DeployModel(model);
    }


    [TestMethod]
    [TestCategory("Docs.XsltListViewWebPartDefinition")]

    [DisplayName("Add XLVWP binded to list by URL")]
    //[Browsable(false)]
    public void CanBindXsltListViewWebPartByListUrl()
    {
        var booksLibrary = new ListDefinition
        {
            Title = "Books library",
            Description = "A document library.",
            TemplateType = BuiltInListTemplateTypeId.DocumentLibrary,
            Url = "BooksLibrary"
        };

        var xsltListView = new XsltListViewWebPartDefinition
        {
            Title = "Books Default View by List Url",
            Id = "m2BooksView",
            ZoneIndex = 10,
            ZoneId = "Main",
            ListUrl = booksLibrary.GetListUrl()
        };

        var webPartPage = new WebPartPageDefinition
        {
            Title = "M2 Xslt List View provision",
            FileName = "xslt-listview-webpart-provision.aspx",
            PageLayoutTemplate = BuiltInWebPartPageTemplates.spstd1
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
              .AddList(booksLibrary)
              .AddHostList(BuiltInListDefinitions.SitePages, list =&gt;
              {
                  list.AddWebPartPage(webPartPage, page =&gt;
                  {
                      page.AddXsltListViewWebPart(xsltListView);
                  });
              });
        });

        DeployModel(model);
    }


    [TestMethod]
    [TestCategory("Docs.XsltListViewWebPartDefinition")]

    [DisplayName("Add XLVWP binded to list view by Title")]
    //[Browsable(false)]
    public void CanBindXsltListViewWebPartByListViewTitle()
    {
        var booksLibrary = new ListDefinition
        {
            Title = "Books library",
            Description = "A document library.",
            TemplateType = BuiltInListTemplateTypeId.DocumentLibrary,
            Url = "BooksLibrary"
        };

        var booksView = new ListViewDefinition
        {
            Title = "Popular Books",
            Fields = new Collection&lt;string&gt;
            {
                BuiltInInternalFieldNames.Edit,
                BuiltInInternalFieldNames.ID,
                BuiltInInternalFieldNames.FileLeafRef
            },
            RowLimit = 10
        };

        var xsltListView = new XsltListViewWebPartDefinition
        {
            Title = "Popular Books binding by List View Title",
            Id = "m2PopularBooksView",
            ZoneIndex = 10,
            ZoneId = "Main",
            ListUrl = booksLibrary.GetListUrl(),
            ViewName = booksView.Title
        };

        var webPartPage = new WebPartPageDefinition
        {
            Title = "M2 Xslt List View provision",
            FileName = "xslt-listview-webpart-provision.aspx",
            PageLayoutTemplate = BuiltInWebPartPageTemplates.spstd1
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
              .AddList(booksLibrary, list =&gt;
              {
                  list.AddListView(booksView);
              })
              .AddHostList(BuiltInListDefinitions.SitePages, list =&gt;
              {
                  list.AddWebPartPage(webPartPage, page =&gt;
                  {
                      page.AddXsltListViewWebPart(xsltListView);
                  });
              });
        });

        DeployModel(model);
    }

    #endregion
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>XsltListViewWebPartDefinitionTests</ClassName>
  <MethodName>XsltListViewWebPartDefinitionTestsClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassXsltListViewWebPartDefinitionTestsClass</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.XsltListViewWebPartDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>XsltListViewWebPartDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>XsltListViewWebPartDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>