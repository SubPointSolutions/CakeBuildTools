<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Web Model</string>
        <string>Navigation</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title />
  <Description />
  <MethodBodyWithFunction>    

    

    //[Browsable(false)]
    public class QuickLaunchNavigationNodeDefinitionTests : ProvisionTestBase
    {
        #region methods

       

        [TestMethod]
        [TestCategory("Docs.QuickLaunchNavigationNodeDefinition")]

        [DisplayName("Add quick nav items")]
        //[Browsable(false)]

        public void CaDeployFlatQuickLaunchNavigation()
        {
            var aboutUs = new QuickLaunchNavigationNodeDefinition
            {
                Title = "About us",
                Url = "about-us.aspx",
                IsExternal = true
            };

            var services = new QuickLaunchNavigationNodeDefinition
            {
                Title = "Services",
                Url = "services.aspx",
                IsExternal = true
            };

            var contacts = new QuickLaunchNavigationNodeDefinition
            {
                Title = "Contacts",
                Url = "contacts.aspx",
                IsExternal = true
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                    .AddQuickLaunchNavigationNode(aboutUs)
                    .AddQuickLaunchNavigationNode(services)
                    .AddQuickLaunchNavigationNode(contacts);
            });

            DeployModel(model);
        }

      

        [TestMethod]
        [TestCategory("Docs.QuickLaunchNavigationNodeDefinition")]
        [DisplayName("Add hierarchical quick nav items")]
        //[Browsable(false)]
        public void CaDeployHierarchicalQuickLaunchNavigation()
        {
            // top level departments node
            var departments = new QuickLaunchNavigationNodeDefinition
            {
                Title = "Departments",
                Url = "departments.aspx",
                IsExternal = true
            };

            var hr = new QuickLaunchNavigationNodeDefinition
            {
                Title = "HR",
                Url = "hr.aspx",
                IsExternal = true
            };

            var it = new QuickLaunchNavigationNodeDefinition
            {
                Title = "IT",
                Url = "it.aspx",
                IsExternal = true
            };

            // top level clients node
            var clients = new QuickLaunchNavigationNodeDefinition
            {
                Title = "Clients",
                Url = "clients.aspx",
                IsExternal = true
            };

            var microsoft = new QuickLaunchNavigationNodeDefinition
            {
                Title = "Microsoft",
                Url = "microsfot.aspx",
                IsExternal = true
            };

            var apple = new QuickLaunchNavigationNodeDefinition
            {
                Title = "Apple",
                Url = "apple.aspx",
                IsExternal = true
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                    .AddQuickLaunchNavigationNode(departments, node =&gt;
                    {
                        node
                            .AddQuickLaunchNavigationNode(hr)
                            .AddQuickLaunchNavigationNode(it);
                    })
                    .AddQuickLaunchNavigationNode(clients, node =&gt;
                    {
                        node
                          .AddQuickLaunchNavigationNode(microsoft)
                          .AddQuickLaunchNavigationNode(apple);
                    });
            });

            DeployModel(model);
        }

        #endregion
    }</MethodBodyWithFunction>
  <MethodBody>//[Browsable(false)]
public class QuickLaunchNavigationNodeDefinitionTests : ProvisionTestBase
{
    #region methods



    [TestMethod]
    [TestCategory("Docs.QuickLaunchNavigationNodeDefinition")]

    [DisplayName("Add quick nav items")]
    //[Browsable(false)]

    public void CaDeployFlatQuickLaunchNavigation()
    {
        var aboutUs = new QuickLaunchNavigationNodeDefinition
        {
            Title = "About us",
            Url = "about-us.aspx",
            IsExternal = true
        };

        var services = new QuickLaunchNavigationNodeDefinition
        {
            Title = "Services",
            Url = "services.aspx",
            IsExternal = true
        };

        var contacts = new QuickLaunchNavigationNodeDefinition
        {
            Title = "Contacts",
            Url = "contacts.aspx",
            IsExternal = true
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
                .AddQuickLaunchNavigationNode(aboutUs)
                .AddQuickLaunchNavigationNode(services)
                .AddQuickLaunchNavigationNode(contacts);
        });

        DeployModel(model);
    }



    [TestMethod]
    [TestCategory("Docs.QuickLaunchNavigationNodeDefinition")]
    [DisplayName("Add hierarchical quick nav items")]
    //[Browsable(false)]
    public void CaDeployHierarchicalQuickLaunchNavigation()
    {
        // top level departments node
        var departments = new QuickLaunchNavigationNodeDefinition
        {
            Title = "Departments",
            Url = "departments.aspx",
            IsExternal = true
        };

        var hr = new QuickLaunchNavigationNodeDefinition
        {
            Title = "HR",
            Url = "hr.aspx",
            IsExternal = true
        };

        var it = new QuickLaunchNavigationNodeDefinition
        {
            Title = "IT",
            Url = "it.aspx",
            IsExternal = true
        };

        // top level clients node
        var clients = new QuickLaunchNavigationNodeDefinition
        {
            Title = "Clients",
            Url = "clients.aspx",
            IsExternal = true
        };

        var microsoft = new QuickLaunchNavigationNodeDefinition
        {
            Title = "Microsoft",
            Url = "microsfot.aspx",
            IsExternal = true
        };

        var apple = new QuickLaunchNavigationNodeDefinition
        {
            Title = "Apple",
            Url = "apple.aspx",
            IsExternal = true
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
                .AddQuickLaunchNavigationNode(departments, node =&gt;
                {
                    node
                        .AddQuickLaunchNavigationNode(hr)
                        .AddQuickLaunchNavigationNode(it);
                })
                .AddQuickLaunchNavigationNode(clients, node =&gt;
                {
                    node
                      .AddQuickLaunchNavigationNode(microsoft)
                      .AddQuickLaunchNavigationNode(apple);
                });
        });

        DeployModel(model);
    }

    #endregion
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>QuickLaunchNavigationNodeDefinitionTests</ClassName>
  <MethodName>QuickLaunchNavigationNodeDefinitionTestsClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassQuickLaunchNavigationNodeDefinitionTestsClass</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.QuickLaunchNavigationNodeDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>QuickLaunchNavigationNodeDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>QuickLaunchNavigationNodeDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>