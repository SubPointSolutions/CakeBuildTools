<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Site Collection Model</string>
        <string>Site collection</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title />
  <Description />
  <MethodBodyWithFunction>    
    

    
    //[Browsable(false)]
    public class WebDefinitionTest : ProvisionTestBase
    {
        #region methods

        [TestMethod]
        [TestCategory("Docs.WebDefinition")]


        [DisplayName("Add web")]
        //[Browsable(false)]
        public void CanDeploySimpleWeb()
        {
            var newCustomerWeb = new WebDefinition
            {
                Title = "New customer site",
                Description = "A dedicated site for the customer support.",
                Url = "new-customer-web",
                WebTemplate = BuiltInWebTemplates.Collaboration.TeamSite
            };
            var newPublishingWeb = new WebDefinition
            {
                Title = "Temporary Publishing Web",
                Description = "A temporary punlishing web.",
                Url = "new-publishing-web",
                WebTemplate = BuiltInWebTemplates.Publishing.PublishingPortal
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web.AddWeb(newCustomerWeb);
                web.AddWeb(newPublishingWeb);
            });

            DeployModel(model);
        }


        [TestMethod]
        [TestCategory("Docs.WebDefinition")]
        [DisplayName("Add multiple webs")]
        //[Browsable(false)]
        public void CanDeploySimpleWebs()
        {
            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web.AddWeb(DocWebs.News);
                web.AddWeb(DocWebs.AboutOurCompany);
            });

            DeployModel(model);
        }



        [TestMethod]
        [TestCategory("Docs.WebDefinition")]

        [DisplayName("Add hierarchical webs")]
        //[Browsable(false)]

        public void CanDeployHierarchicalWebs()
        {
            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                    .AddWeb(DocWebs.News)
                    .AddWeb(DocWebs.Departments, departmentWeb =&gt;
                    {
                        departmentWeb
                            .AddWeb(DocWebs.DepartmentWebs.HR)
                            .AddWeb(DocWebs.DepartmentWebs.ITHelpDesk, itWeb =&gt;
                            {
                                itWeb
                                    .AddWeb(DocWebs.DepartmentWebs.ITHelpDeskWebs.Apple)
                                    .AddWeb(DocWebs.DepartmentWebs.ITHelpDeskWebs.Cisco)
                                    .AddWeb(DocWebs.DepartmentWebs.ITHelpDeskWebs.Microsoft);
                            })
                            .AddWeb(DocWebs.DepartmentWebs.Sales);
                    })
                    .AddWeb(DocWebs.AboutOurCompany);
            });

            DeployModel(model);
        }

        #endregion
    }</MethodBodyWithFunction>
  <MethodBody>//[Browsable(false)]
public class WebDefinitionTest : ProvisionTestBase
{
    #region methods

    [TestMethod]
    [TestCategory("Docs.WebDefinition")]


    [DisplayName("Add web")]
    //[Browsable(false)]
    public void CanDeploySimpleWeb()
    {
        var newCustomerWeb = new WebDefinition
        {
            Title = "New customer site",
            Description = "A dedicated site for the customer support.",
            Url = "new-customer-web",
            WebTemplate = BuiltInWebTemplates.Collaboration.TeamSite
        };
        var newPublishingWeb = new WebDefinition
        {
            Title = "Temporary Publishing Web",
            Description = "A temporary punlishing web.",
            Url = "new-publishing-web",
            WebTemplate = BuiltInWebTemplates.Publishing.PublishingPortal
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web.AddWeb(newCustomerWeb);
            web.AddWeb(newPublishingWeb);
        });

        DeployModel(model);
    }


    [TestMethod]
    [TestCategory("Docs.WebDefinition")]
    [DisplayName("Add multiple webs")]
    //[Browsable(false)]
    public void CanDeploySimpleWebs()
    {
        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web.AddWeb(DocWebs.News);
            web.AddWeb(DocWebs.AboutOurCompany);
        });

        DeployModel(model);
    }



    [TestMethod]
    [TestCategory("Docs.WebDefinition")]

    [DisplayName("Add hierarchical webs")]
    //[Browsable(false)]

    public void CanDeployHierarchicalWebs()
    {
        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
                .AddWeb(DocWebs.News)
                .AddWeb(DocWebs.Departments, departmentWeb =&gt;
                {
                    departmentWeb
                        .AddWeb(DocWebs.DepartmentWebs.HR)
                        .AddWeb(DocWebs.DepartmentWebs.ITHelpDesk, itWeb =&gt;
                        {
                            itWeb
                                .AddWeb(DocWebs.DepartmentWebs.ITHelpDeskWebs.Apple)
                                .AddWeb(DocWebs.DepartmentWebs.ITHelpDeskWebs.Cisco)
                                .AddWeb(DocWebs.DepartmentWebs.ITHelpDeskWebs.Microsoft);
                        })
                        .AddWeb(DocWebs.DepartmentWebs.Sales);
                })
                .AddWeb(DocWebs.AboutOurCompany);
        });

        DeployModel(model);
    }

    #endregion
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>WebDefinitionTest</ClassName>
  <MethodName>WebDefinitionTestClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassWebDefinitionTestClass</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.WebDefinitionTest</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>WebDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>WebDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>