<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Site Collection Model</string>
        <string>Fields</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title />
  <Description />
  <MethodBodyWithFunction>    
    

    

    //[Browsable(false)]
    public class MultiChoiceFieldDefinitionTests : ProvisionTestBase
    {
        #region methods

        [TestMethod]
        [TestCategory("Docs.MultiChoiceFieldDefinition")]

        [DisplayName("Add multichoice field")]
        //[Browsable(false)]
        public void CanDeploySimpleMultiChoiceFieldDefinition()
        {
            var fieldDef = new MultiChoiceFieldDefinition
            {
                Title = "Tasks label",
                InternalName = "dcs_ProgressTag",
                Group = "SPMeta2.Samples",
                Id = new Guid("b08325aa-a750-4bf9-a73e-c470b86d37c8"),
                Choices = new Collection&lt;string&gt;
                {
                    "internal",
                    "external",
                    "bug",
                    "easy fix",
                    "enhancement"
                }
            };

            var model = SPMeta2Model.NewSiteModel(site =&gt;
            {
                site.AddMultiChoiceField(fieldDef);
            });

            DeployModel(model);
        }

        #endregion
    }</MethodBodyWithFunction>
  <MethodBody>//[Browsable(false)]
public class MultiChoiceFieldDefinitionTests : ProvisionTestBase
{
    #region methods

    [TestMethod]
    [TestCategory("Docs.MultiChoiceFieldDefinition")]

    [DisplayName("Add multichoice field")]
    //[Browsable(false)]
    public void CanDeploySimpleMultiChoiceFieldDefinition()
    {
        var fieldDef = new MultiChoiceFieldDefinition
        {
            Title = "Tasks label",
            InternalName = "dcs_ProgressTag",
            Group = "SPMeta2.Samples",
            Id = new Guid("b08325aa-a750-4bf9-a73e-c470b86d37c8"),
            Choices = new Collection&lt;string&gt;
            {
                "internal",
                "external",
                "bug",
                "easy fix",
                "enhancement"
            }
        };

        var model = SPMeta2Model.NewSiteModel(site =&gt;
        {
            site.AddMultiChoiceField(fieldDef);
        });

        DeployModel(model);
    }

    #endregion
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>MultiChoiceFieldDefinitionTests</ClassName>
  <MethodName>MultiChoiceFieldDefinitionTestsClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassMultiChoiceFieldDefinitionTestsClass</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.MultiChoiceFieldDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>MultiChoiceFieldDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>MultiChoiceFieldDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>