<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>true</IsMethod>
  <IsClass>false</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Web Model</string>
        <string>Lists and libraries</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title>Remove content types from lists</Title>
  <MethodBodyWithFunction>
        

        
        //[Browsable(false)]
        public void CanRemoveContentTypeFromList()
        {
            var defaultReport = new ContentTypeDefinition
            {
                Name = "M2 Default Report",
                Id = new Guid("E2134FA1-254A-41AF-8BB0-A0A521722832"),
                ParentContentTypeId = BuiltInContentTypeId.Item,
                Group = "SPMeta2.Samples"
            };

            var defaultReportsList = new ListDefinition
            {
                Title = "M2 Default Reports",
                Description = "A generic list.",
                TemplateType = BuiltInListTemplateTypeId.GenericList,
                ContentTypesEnabled = true,
                Url = "M2DefaultReports"
            };

            var siteModel = SPMeta2Model.NewSiteModel(site =&gt;
            {
                site
                    .AddContentType(defaultReport);
            });

            var webModel = SPMeta2Model.NewWebModel(web =&gt;
            {
                web.AddList(defaultReportsList, list =&gt;
                {
                    list
                        .AddContentTypeLink(defaultReport)
                        .AddRemoveContentTypeLinks(new RemoveContentTypeLinksDefinition
                        {
                            ContentTypes = new List&lt;ContentTypeLinkValue&gt;
                            {
                                new ContentTypeLinkValue{ ContentTypeName = "Item"}
                            }
                        });
                });
            });

            DeployModel(siteModel);
            DeployModel(webModel);
        }</MethodBodyWithFunction>
  <MethodBody>var defaultReport = new ContentTypeDefinition
{
    Name = "M2 Default Report",
    Id = new Guid("E2134FA1-254A-41AF-8BB0-A0A521722832"),
    ParentContentTypeId = BuiltInContentTypeId.Item,
    Group = "SPMeta2.Samples"
};

var defaultReportsList = new ListDefinition
{
    Title = "M2 Default Reports",
    Description = "A generic list.",
    TemplateType = BuiltInListTemplateTypeId.GenericList,
    ContentTypesEnabled = true,
    Url = "M2DefaultReports"
};

var siteModel = SPMeta2Model.NewSiteModel(site =&gt;
{
    site
        .AddContentType(defaultReport);
});

var webModel = SPMeta2Model.NewWebModel(web =&gt;
{
    web.AddList(defaultReportsList, list =&gt;
    {
        list
            .AddContentTypeLink(defaultReport)
            .AddRemoveContentTypeLinks(new RemoveContentTypeLinksDefinition
            {
                ContentTypes = new List&lt;ContentTypeLinkValue&gt;
                {
                    new ContentTypeLinkValue{ ContentTypeName = "Item"}
                }
            });
    });
});

DeployModel(siteModel);
DeployModel(webModel);

</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>RemoveContentTypeLinksDefinitionTests</ClassName>
  <MethodName>CanRemoveContentTypeFromList</MethodName>
  <ClassComment />
  <MethodFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.RemoveContentTypeLinksDefinitionTests.CanRemoveContentTypeFromList</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.RemoveContentTypeLinksDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>RemoveContentTypeLinksDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>RemoveContentTypeLinksDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>