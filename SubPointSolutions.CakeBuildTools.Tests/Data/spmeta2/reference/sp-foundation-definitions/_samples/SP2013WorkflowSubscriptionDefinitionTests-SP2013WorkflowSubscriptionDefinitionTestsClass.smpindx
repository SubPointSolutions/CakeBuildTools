<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Web Model</string>
        <string>SharePoint 2013 workflow</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title />
  <Description />
  <MethodBodyWithFunction>    
    

    
    //[Browsable(false)]
    public class SP2013WorkflowSubscriptionDefinitionTests : ProvisionTestBase
    {
        #region methods

       [DisplayName("Add SP2013 workflow to web")]
        //[Browsable(false)]
        public void CanDeploySimpleSP2013WorkflowSubscriptionToWeb()
        {
            var writeToHistoryListWorkflow = new SP2013WorkflowDefinition
            {
                DisplayName = "M2 - Write to history list",
                Override = true,
                Xaml = WorkflowTemplates.WriteToHistoryListWorkflow
            };

            var taskList = new ListDefinition
            {
                Title = "Write To History List Tasks",
                TemplateType = BuiltInListTemplateTypeId.Tasks,
                Url = "m2WriteToHistoryListTasks"
            };

            var historyList = new ListDefinition
            {
                Title = "Write To History List History",
                TemplateType = BuiltInListTemplateTypeId.WorkflowHistory,
                Url = "m2WriteToHistoryListHistory"
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                  .AddSP2013Workflow(writeToHistoryListWorkflow)
                  .AddList(historyList)
                  .AddList(taskList)
                  .AddSP2013WorkflowSubscription(new SP2013WorkflowSubscriptionDefinition
                  {
                      Name = "Write To History Web Workflow",
                      WorkflowDisplayName = writeToHistoryListWorkflow.DisplayName,
                      HistoryListUrl = historyList.GetListUrl(),
                      TaskListUrl = taskList.GetListUrl()
                  });
            });

            DeployModel(model);
        }

        [TestMethod]
        [TestCategory("Docs.SP2013WorkflowSubscriptionDefinition")]

        [DisplayName("Add SP2013 workflow to list")]
        //[Browsable(false)]
        public void CanDeploySimpleSP2013WorkflowSubscriptionToList()
        {
            var writeToHistoryListWorkflow = new SP2013WorkflowDefinition
            {
                DisplayName = "M2 - Write to history list",
                Override = true,
                Xaml = WorkflowTemplates.WriteToHistoryListWorkflow
            };

            var taskList = new ListDefinition
            {
                Title = "Workflow Enabled List Tasks",
                TemplateType = BuiltInListTemplateTypeId.Tasks,
                Url = "m2WorkflowEnabledListTasks"
            };

            var historyList = new ListDefinition
            {
                Title = "Workflow Enabled List History",
                TemplateType = BuiltInListTemplateTypeId.WorkflowHistory,
                Url = "m2WorkflowEnabledListHistory"
            };

            var workflowEnabledList = new ListDefinition
            {
                Title = "Workflow Enabled List",
                Description = "Workflow enabled list.",
                TemplateType = BuiltInListTemplateTypeId.GenericList,
                Url = "WorkflowEnabledList"
            };

            var model = SPMeta2Model.NewWebModel(web =&gt;
            {
                web
                    .AddSP2013Workflow(writeToHistoryListWorkflow)
                    .AddList(historyList)
                    .AddList(taskList)
                    .AddList(workflowEnabledList, list =&gt;
                    {
                        list
                            .AddSP2013WorkflowSubscription(new SP2013WorkflowSubscriptionDefinition
                            {
                                Name = "Write To History List Workflow",
                                WorkflowDisplayName = writeToHistoryListWorkflow.DisplayName,
                                HistoryListUrl = historyList.GetListUrl(),
                                TaskListUrl = taskList.GetListUrl()
                            });
                    });
            });

            DeployModel(model);
        }

        #endregion
    }</MethodBodyWithFunction>
  <MethodBody>//[Browsable(false)]
public class SP2013WorkflowSubscriptionDefinitionTests : ProvisionTestBase
{
    #region methods

   [DisplayName("Add SP2013 workflow to web")]
    //[Browsable(false)]
    public void CanDeploySimpleSP2013WorkflowSubscriptionToWeb()
    {
        var writeToHistoryListWorkflow = new SP2013WorkflowDefinition
        {
            DisplayName = "M2 - Write to history list",
            Override = true,
            Xaml = WorkflowTemplates.WriteToHistoryListWorkflow
        };

        var taskList = new ListDefinition
        {
            Title = "Write To History List Tasks",
            TemplateType = BuiltInListTemplateTypeId.Tasks,
            Url = "m2WriteToHistoryListTasks"
        };

        var historyList = new ListDefinition
        {
            Title = "Write To History List History",
            TemplateType = BuiltInListTemplateTypeId.WorkflowHistory,
            Url = "m2WriteToHistoryListHistory"
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
              .AddSP2013Workflow(writeToHistoryListWorkflow)
              .AddList(historyList)
              .AddList(taskList)
              .AddSP2013WorkflowSubscription(new SP2013WorkflowSubscriptionDefinition
              {
                  Name = "Write To History Web Workflow",
                  WorkflowDisplayName = writeToHistoryListWorkflow.DisplayName,
                  HistoryListUrl = historyList.GetListUrl(),
                  TaskListUrl = taskList.GetListUrl()
              });
        });

        DeployModel(model);
    }

    [TestMethod]
    [TestCategory("Docs.SP2013WorkflowSubscriptionDefinition")]

    [DisplayName("Add SP2013 workflow to list")]
    //[Browsable(false)]
    public void CanDeploySimpleSP2013WorkflowSubscriptionToList()
    {
        var writeToHistoryListWorkflow = new SP2013WorkflowDefinition
        {
            DisplayName = "M2 - Write to history list",
            Override = true,
            Xaml = WorkflowTemplates.WriteToHistoryListWorkflow
        };

        var taskList = new ListDefinition
        {
            Title = "Workflow Enabled List Tasks",
            TemplateType = BuiltInListTemplateTypeId.Tasks,
            Url = "m2WorkflowEnabledListTasks"
        };

        var historyList = new ListDefinition
        {
            Title = "Workflow Enabled List History",
            TemplateType = BuiltInListTemplateTypeId.WorkflowHistory,
            Url = "m2WorkflowEnabledListHistory"
        };

        var workflowEnabledList = new ListDefinition
        {
            Title = "Workflow Enabled List",
            Description = "Workflow enabled list.",
            TemplateType = BuiltInListTemplateTypeId.GenericList,
            Url = "WorkflowEnabledList"
        };

        var model = SPMeta2Model.NewWebModel(web =&gt;
        {
            web
                .AddSP2013Workflow(writeToHistoryListWorkflow)
                .AddList(historyList)
                .AddList(taskList)
                .AddList(workflowEnabledList, list =&gt;
                {
                    list
                        .AddSP2013WorkflowSubscription(new SP2013WorkflowSubscriptionDefinition
                        {
                            Name = "Write To History List Workflow",
                            WorkflowDisplayName = writeToHistoryListWorkflow.DisplayName,
                            HistoryListUrl = historyList.GetListUrl(),
                            TaskListUrl = taskList.GetListUrl()
                        });
                });
        });

        DeployModel(model);
    }

    #endregion
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SubPointSolutions.Docs.Views.Views.SPMeta2.reference</Namespace>
  <ClassName>SP2013WorkflowSubscriptionDefinitionTests</ClassName>
  <MethodName>SP2013WorkflowSubscriptionDefinitionTestsClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassSP2013WorkflowSubscriptionDefinitionTestsClass</MethodFullName>
  <ClassFullName>SubPointSolutions.Docs.Views.Views.SPMeta2.reference.SP2013WorkflowSubscriptionDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>SP2013WorkflowSubscriptionDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>SP2013WorkflowSubscriptionDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>