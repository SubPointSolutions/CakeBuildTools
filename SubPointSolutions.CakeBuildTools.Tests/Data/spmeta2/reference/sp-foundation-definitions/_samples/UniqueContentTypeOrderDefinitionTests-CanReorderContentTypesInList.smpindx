<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>true</IsMethod>
  <IsClass>false</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Web Model</string>
        <string>Lists and libraries</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title>Reorder content types</Title>
  <MethodBodyWithFunction>
        

        
        //[Browsable(false)]
        public void CanReorderContentTypesInList()
        {
            var creditContentType = new ContentTypeDefinition
            {
                Name = "M2 Credit",
                Id = new Guid("5D8346E4-A7AB-40AE-9AE9-22CF18170029"),
                ParentContentTypeId = BuiltInContentTypeId.Item,
                Group = "SPMeta2.Samples"
            };

            var debitContentType = new ContentTypeDefinition
            {
                Name = "M2 Debit",
                Id = new Guid("0C8D0474-384B-4765-8F84-993124447516"),
                ParentContentTypeId = BuiltInContentTypeId.Item,
                Group = "SPMeta2.Samples"
            };

            var totalContentType = new ContentTypeDefinition
            {
                Name = "M2 Total",
                Id = new Guid("110E6911-4611-4905-9E2F-46FEA608B418"),
                ParentContentTypeId = BuiltInContentTypeId.Item,
                Group = "SPMeta2.Samples"
            };

            var annualRevenueList = new ListDefinition
            {
                Title = "M2 Annual Revenue",
                Description = "A generic list.",
                TemplateType = BuiltInListTemplateTypeId.GenericList,
                ContentTypesEnabled = true,
                Url = "M2AnnualRevenue"
            };

            var siteModel = SPMeta2Model.NewSiteModel(site =&gt;
            {
                site
                    .AddContentType(creditContentType)
                    .AddContentType(debitContentType)
                    .AddContentType(totalContentType);
            });

            var webModel = SPMeta2Model.NewWebModel(web =&gt;
            {
                web.AddList(annualRevenueList, list =&gt;
                {
                    list
                        .AddContentTypeLink(totalContentType)
                        .AddContentTypeLink(creditContentType)
                        .AddContentTypeLink(debitContentType)
                        .AddUniqueContentTypeOrder(new UniqueContentTypeOrderDefinition
                        {
                            ContentTypes = new List&lt;ContentTypeLinkValue&gt;
                            {
                                new ContentTypeLinkValue{ ContentTypeName = creditContentType.Name },
                                new ContentTypeLinkValue{ ContentTypeName = debitContentType.Name },
                                new ContentTypeLinkValue{ ContentTypeName = totalContentType.Name }
                            }
                        });
                });
            });

            DeployModel(siteModel);
            DeployModel(webModel);
        }</MethodBodyWithFunction>
  <MethodBody>var creditContentType = new ContentTypeDefinition
{
    Name = "M2 Credit",
    Id = new Guid("5D8346E4-A7AB-40AE-9AE9-22CF18170029"),
    ParentContentTypeId = BuiltInContentTypeId.Item,
    Group = "SPMeta2.Samples"
};

var debitContentType = new ContentTypeDefinition
{
    Name = "M2 Debit",
    Id = new Guid("0C8D0474-384B-4765-8F84-993124447516"),
    ParentContentTypeId = BuiltInContentTypeId.Item,
    Group = "SPMeta2.Samples"
};

var totalContentType = new ContentTypeDefinition
{
    Name = "M2 Total",
    Id = new Guid("110E6911-4611-4905-9E2F-46FEA608B418"),
    ParentContentTypeId = BuiltInContentTypeId.Item,
    Group = "SPMeta2.Samples"
};

var annualRevenueList = new ListDefinition
{
    Title = "M2 Annual Revenue",
    Description = "A generic list.",
    TemplateType = BuiltInListTemplateTypeId.GenericList,
    ContentTypesEnabled = true,
    Url = "M2AnnualRevenue"
};

var siteModel = SPMeta2Model.NewSiteModel(site =&gt;
{
    site
        .AddContentType(creditContentType)
        .AddContentType(debitContentType)
        .AddContentType(totalContentType);
});

var webModel = SPMeta2Model.NewWebModel(web =&gt;
{
    web.AddList(annualRevenueList, list =&gt;
    {
        list
            .AddContentTypeLink(totalContentType)
            .AddContentTypeLink(creditContentType)
            .AddContentTypeLink(debitContentType)
            .AddUniqueContentTypeOrder(new UniqueContentTypeOrderDefinition
            {
                ContentTypes = new List&lt;ContentTypeLinkValue&gt;
                {
                    new ContentTypeLinkValue{ ContentTypeName = creditContentType.Name },
                    new ContentTypeLinkValue{ ContentTypeName = debitContentType.Name },
                    new ContentTypeLinkValue{ ContentTypeName = totalContentType.Name }
                }
            });
    });
});

DeployModel(siteModel);
DeployModel(webModel);

</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>UniqueContentTypeOrderDefinitionTests</ClassName>
  <MethodName>CanReorderContentTypesInList</MethodName>
  <ClassComment />
  <MethodFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.UniqueContentTypeOrderDefinitionTests.CanReorderContentTypesInList</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.UniqueContentTypeOrderDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>UniqueContentTypeOrderDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>UniqueContentTypeOrderDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>