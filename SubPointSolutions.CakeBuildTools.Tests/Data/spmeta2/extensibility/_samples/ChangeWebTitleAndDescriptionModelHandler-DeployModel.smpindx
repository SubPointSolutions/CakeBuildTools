<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>true</IsMethod>
  <IsClass>false</IsClass>
  <Tags />
  <MethodBodyWithFunction>public override void DeployModel(object modelHost, DefinitionBase model)
        {
            var webModeHost = modelHost.WithAssertAndCast&lt;WebModelHost&gt;(
                                        "model",
                                        value =&gt; value.RequireNotNull());

            var definition = model.WithAssertAndCast&lt;ChangeWebTitleAndDescriptionDefinition&gt;(
                                        "model",
                                        value =&gt; value.RequireNotNull());

            var currentWeb = webModeHost.HostWeb;
            var context = currentWeb.Context;

            // raise OnProvisioning event
            InvokeOnModelEvent(this, new ModelEventArgs
            {
                CurrentModelNode = null,
                Model = null,
                EventType = ModelEventType.OnProvisioning,
                Object = currentWeb,
                ObjectType = typeof(Web),
                ObjectDefinition = definition,
                ModelHost = modelHost
            });

            // do stuff
            currentWeb.Title = definition.Title;
            currentWeb.Description = definition.Description;

            // raise OnProvisioned event
            InvokeOnModelEvent(this, new ModelEventArgs
            {
                CurrentModelNode = null,
                Model = null,
                EventType = ModelEventType.OnProvisioned,
                Object = currentWeb,
                ObjectType = typeof(Web),
                ObjectDefinition = definition,
                ModelHost = modelHost
            });

            currentWeb.Update();
            context.ExecuteQuery();
        }</MethodBodyWithFunction>
  <MethodBody>var webModeHost = modelHost.WithAssertAndCast&lt;WebModelHost&gt;(
                            "model",
                            value =&gt; value.RequireNotNull());

var definition = model.WithAssertAndCast&lt;ChangeWebTitleAndDescriptionDefinition&gt;(
                            "model",
                            value =&gt; value.RequireNotNull());

var currentWeb = webModeHost.HostWeb;
var context = currentWeb.Context;

// raise OnProvisioning event
InvokeOnModelEvent(this, new ModelEventArgs
{
    CurrentModelNode = null,
    Model = null,
    EventType = ModelEventType.OnProvisioning,
    Object = currentWeb,
    ObjectType = typeof(Web),
    ObjectDefinition = definition,
    ModelHost = modelHost
});

// do stuff
currentWeb.Title = definition.Title;
currentWeb.Description = definition.Description;

// raise OnProvisioned event
InvokeOnModelEvent(this, new ModelEventArgs
{
    CurrentModelNode = null,
    Model = null,
    EventType = ModelEventType.OnProvisioned,
    Object = currentWeb,
    ObjectType = typeof(Web),
    ObjectDefinition = definition,
    ModelHost = modelHost
});

currentWeb.Update();
context.ExecuteQuery();

</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>ChangeWebTitleAndDescriptionModelHandler</ClassName>
  <MethodName>DeployModel</MethodName>
  <ClassComment />
  <MethodFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.ChangeWebTitleAndDescriptionModelHandler.DeployModel</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.ChangeWebTitleAndDescriptionModelHandler</ClassFullName>
  <MethodParametersCount>2</MethodParametersCount>
  <SourceFileName>writing-custom-definition.cs</SourceFileName>
  <SourceFileNameWithoutExtension>writing-custom-definition</SourceFileNameWithoutExtension>
</DocSample>