<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags />
  <Title />
  <Description />
  <MethodBodyWithFunction>    
    public class CustomLogginRegistration : ProvisionTestBase
    {
        [TestMethod]
        [TestCategory("Docs.Models")]
        public void RegisterCustomLogginService()
        {
            // get an instance of ServiceContainer
            // override .Services collection with the right mapping 
            // typeof(TraceServiceBase) -&gt; your instance of TraceServiceBase class

            var serviceInstancies = ServiceContainer.Instance.Services[typeof(TraceServiceBase)];

            serviceInstancies.Clear();
            serviceInstancies.Add(new CustomLoggingService());

            // provision models as usual
            // from now on, all logging calls will go to CustomLoggingService instance
        }

        [TestMethod]
        [TestCategory("Docs.Models")]
        public void GetDefaultTraceServiceInstance()
        {
            // get an instance of ServiceContainer
            // then get an instance of required service such as TraceServiceBase

            var traceService = ServiceContainer.Instance.GetService&lt;TraceServiceBase&gt;();

            // use trace methods as usual
            traceService.Verbose(0, "my verbose message");
        }
    }</MethodBodyWithFunction>
  <MethodBody>public class CustomLogginRegistration : ProvisionTestBase
{
    [TestMethod]
    [TestCategory("Docs.Models")]
    public void RegisterCustomLogginService()
    {
        // get an instance of ServiceContainer
        // override .Services collection with the right mapping
        // typeof(TraceServiceBase) -&gt; your instance of TraceServiceBase class

        var serviceInstancies = ServiceContainer.Instance.Services[typeof(TraceServiceBase)];

        serviceInstancies.Clear();
        serviceInstancies.Add(new CustomLoggingService());

        // provision models as usual
        // from now on, all logging calls will go to CustomLoggingService instance
    }

    [TestMethod]
    [TestCategory("Docs.Models")]
    public void GetDefaultTraceServiceInstance()
    {
        // get an instance of ServiceContainer
        // then get an instance of required service such as TraceServiceBase

        var traceService = ServiceContainer.Instance.GetService&lt;TraceServiceBase&gt;();

        // use trace methods as usual
        traceService.Verbose(0, "my verbose message");
    }
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>CustomLogginRegistration</ClassName>
  <MethodName>CustomLogginRegistrationClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassCustomLogginRegistrationClass</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.CustomLogginRegistration</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>writing-custom-logging.cs</SourceFileName>
  <SourceFileNameWithoutExtension>writing-custom-logging</SourceFileNameWithoutExtension>
</DocSample>