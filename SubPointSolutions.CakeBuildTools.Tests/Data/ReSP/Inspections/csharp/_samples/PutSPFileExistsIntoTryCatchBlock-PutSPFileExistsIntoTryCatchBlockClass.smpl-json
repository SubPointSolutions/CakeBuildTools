{"IsMethod":false,"IsClass":true,"Tags":[],"Scope":null,"Title":"","Description":"","MethodBodyWithFunction":"    \r\n    public class PutSPFileExistsIntoTryCatchBlock\r\n    {\r\n        [TestMethod]\r\n        public void CorrectSPFileExistsUsage(SPWeb web)\r\n        {\r\n            var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }\r\n        }\r\n    }","MethodBody":"public class PutSPFileExistsIntoTryCatchBlock\r\n{\r\n    [TestMethod]\r\n    public void CorrectSPFileExistsUsage(SPWeb web)\r\n    {\r\n        var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n        if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n        {\r\n            string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n            try\r\n            {\r\n                var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                web.MasterUrl = oldMasterUrl;\r\n            }\r\n            catch (ArgumentException)\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n            }\r\n\r\n\r\n            var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n            try\r\n            {\r\n                var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n            }\r\n            catch (ArgumentException)\r\n            {\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }\r\n\r\n            web.AllProperties.Remove(\"OldMasterUrl\");\r\n            web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n        }\r\n        else\r\n        {\r\n            web.MasterUrl = defaultMasterUrl;\r\n            web.CustomMasterUrl = defaultMasterUrl;\r\n        }\r\n    }\r\n}\r\n","Language":"cs","Namespace":"ReSharePoint.Docs.Basic.Inspection.Code","ClassName":"PutSPFileExistsIntoTryCatchBlock","MethodName":"PutSPFileExistsIntoTryCatchBlockClass","ClassComment":"","MethodFullName":"ClassPutSPFileExistsIntoTryCatchBlockClass","ClassFullName":"ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock","MethodParametersCount":0,"SourceFileName":"PutSPFileExistsIntoTryCatchBlock.cs","SourceFileNameWithoutExtension":"PutSPFileExistsIntoTryCatchBlock"}