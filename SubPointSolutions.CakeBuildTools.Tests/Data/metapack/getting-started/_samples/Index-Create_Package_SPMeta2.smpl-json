{"IsMethod":true,"IsClass":false,"Tags":[],"Scope":null,"Title":null,"Description":null,"MethodBodyWithFunction":"\r\n        \r\n        public void Create_Package_SPMeta2()\r\n        {\r\n            // Follows NuGet spec design - https://docs.nuget.org/ndocs/schema/nuspec\r\n            // Solution package is a container for SERIALIZED models.\r\n            var solutionPackage = new SolutionPackageBase();\r\n\r\n            solutionPackage.Name = \"Contoso Intranet SPMeta2 - Site Fields\";\r\n            solutionPackage.Title = \"Contoso Intranet SPMeta2 - Site Fields\";\r\n\r\n            solutionPackage.Description = \"Contains site level fields for Contoso intranet\";\r\n            solutionPackage.Id = \"Contoso.Intranet.SiteFields.SPMeta2\";\r\n            solutionPackage.Authors = \"SubPoint Solutions\";\r\n            solutionPackage.Company = \"SubPoint Solutions\";\r\n            solutionPackage.Version = \"1.0.0.0\";\r\n            solutionPackage.Owners = \"SubPoint Solutions\";\r\n\r\n            solutionPackage.ReleaseNotes = \"Initial set of the site fields for Contoso Intranet\";\r\n            solutionPackage.Summary = \"All site fields required for Contoso intranet\";\r\n            solutionPackage.ProjectUrl = \"https://github.com/SubPointSolutions/DefinitelyPacked\";\r\n            solutionPackage.IconUrl = \"https://github.com/SubPointSolutions/metapack/metapack.png\";\r\n            solutionPackage.LicenseUrl = \"https://opensource.org/licenses/MIT\";\r\n\r\n            solutionPackage.Copyright = \"All yours\";\r\n            solutionPackage.Tags = \"MetaPack SPMeta2 SiteFields Taxonomy\";\r\n\r\n            // here are all your SPMeta2 models\r\n            var models = new List<ModelNode>();\r\n\r\n            // create a new ModelContainerBase for every model\r\n            // and then add to solution package\r\n            // you can put \"Order\" option to control deployment order of the models\r\n\r\n            for (var index = 0; index < models.Count; index++)\r\n            {\r\n                var model = models[index];\r\n                var xmlContext = SPMeta2Model.ToXML(model);\r\n\r\n                // create ModelContainerBase, put serialized model there\r\n                var modelContainer = new ModelContainerBase\r\n                {\r\n                    Model = Encoding.UTF8.GetBytes(xmlContext),\r\n                };\r\n\r\n                // add sort order to control deployment order of the models\r\n                modelContainer.AdditionalOptions.Add(new OptionValue\r\n                {\r\n                    Name = DefaultOptions.Model.Order.Id,\r\n                    Value = index.ToString()\r\n                });\r\n\r\n                // add model container to solution\r\n                solutionPackage.AddModel(modelContainer);\r\n            }\r\n\r\n            // flag a provider which will be used for solution package deployment\r\n            solutionPackage.AdditionalOptions.Add(new OptionValue\r\n            {\r\n                Name = DefaultOptions.SolutionToolPackage.PackageId.Id,\r\n                Value = \"MetaPack.SPMeta2\"\r\n            });\r\n\r\n            var solutionPackageService = new SPMeta2SolutionPackageService();\r\n\r\n            // save your NuGet solution package as stream\r\n            var nuGetPackageStream = solutionPackageService.Pack(solutionPackage, null);\r\n\r\n            // or save it straight to file, for instance, on shared folder\r\n            solutionPackageService.PackToFile(solutionPackage, \"Contoso.Intranet.SiteFields.SPMeta2.nupkg\");\r\n\r\n            // or push it straight to NuGet gallery you've got - http://NuGet.org or http://MyGet.org\r\n            // follow instructions on how obtain Url/Key for a specific NuGet Gallery\r\n            var nuGetGallery_ApiUrl = \"\";\r\n            var nuGetGallery_ApiKey = \"\";\r\n\r\n            solutionPackageService.Push(solutionPackage, nuGetGallery_ApiUrl, nuGetGallery_ApiKey);\r\n        }","MethodBody":"// Follows NuGet spec design - https://docs.nuget.org/ndocs/schema/nuspec\r\n// Solution package is a container for SERIALIZED models.\r\nvar solutionPackage = new SolutionPackageBase();\r\n\r\nsolutionPackage.Name = \"Contoso Intranet SPMeta2 - Site Fields\";\r\nsolutionPackage.Title = \"Contoso Intranet SPMeta2 - Site Fields\";\r\n\r\nsolutionPackage.Description = \"Contains site level fields for Contoso intranet\";\r\nsolutionPackage.Id = \"Contoso.Intranet.SiteFields.SPMeta2\";\r\nsolutionPackage.Authors = \"SubPoint Solutions\";\r\nsolutionPackage.Company = \"SubPoint Solutions\";\r\nsolutionPackage.Version = \"1.0.0.0\";\r\nsolutionPackage.Owners = \"SubPoint Solutions\";\r\n\r\nsolutionPackage.ReleaseNotes = \"Initial set of the site fields for Contoso Intranet\";\r\nsolutionPackage.Summary = \"All site fields required for Contoso intranet\";\r\nsolutionPackage.ProjectUrl = \"https://github.com/SubPointSolutions/DefinitelyPacked\";\r\nsolutionPackage.IconUrl = \"https://github.com/SubPointSolutions/metapack/metapack.png\";\r\nsolutionPackage.LicenseUrl = \"https://opensource.org/licenses/MIT\";\r\n\r\nsolutionPackage.Copyright = \"All yours\";\r\nsolutionPackage.Tags = \"MetaPack SPMeta2 SiteFields Taxonomy\";\r\n\r\n// here are all your SPMeta2 models\r\nvar models = new List<ModelNode>();\r\n\r\n// create a new ModelContainerBase for every model\r\n// and then add to solution package\r\n// you can put \"Order\" option to control deployment order of the models\r\n\r\nfor (var index = 0; index < models.Count; index++)\r\n{\r\n    var model = models[index];\r\n    var xmlContext = SPMeta2Model.ToXML(model);\r\n\r\n    // create ModelContainerBase, put serialized model there\r\n    var modelContainer = new ModelContainerBase\r\n    {\r\n        Model = Encoding.UTF8.GetBytes(xmlContext),\r\n    };\r\n\r\n    // add sort order to control deployment order of the models\r\n    modelContainer.AdditionalOptions.Add(new OptionValue\r\n    {\r\n        Name = DefaultOptions.Model.Order.Id,\r\n        Value = index.ToString()\r\n    });\r\n\r\n    // add model container to solution\r\n    solutionPackage.AddModel(modelContainer);\r\n}\r\n\r\n// flag a provider which will be used for solution package deployment\r\nsolutionPackage.AdditionalOptions.Add(new OptionValue\r\n{\r\n    Name = DefaultOptions.SolutionToolPackage.PackageId.Id,\r\n    Value = \"MetaPack.SPMeta2\"\r\n});\r\n\r\nvar solutionPackageService = new SPMeta2SolutionPackageService();\r\n\r\n// save your NuGet solution package as stream\r\nvar nuGetPackageStream = solutionPackageService.Pack(solutionPackage, null);\r\n\r\n// or save it straight to file, for instance, on shared folder\r\nsolutionPackageService.PackToFile(solutionPackage, \"Contoso.Intranet.SiteFields.SPMeta2.nupkg\");\r\n\r\n// or push it straight to NuGet gallery you've got - http://NuGet.org or http://MyGet.org\r\n// follow instructions on how obtain Url/Key for a specific NuGet Gallery\r\nvar nuGetGallery_ApiUrl = \"\";\r\nvar nuGetGallery_ApiKey = \"\";\r\n\r\nsolutionPackageService.Push(solutionPackage, nuGetGallery_ApiUrl, nuGetGallery_ApiKey);\r\n\r\n","Language":"cs","Namespace":"SubPointSolutions.Docs.Views.MetaPack","ClassName":"Index","MethodName":"Create_Package_SPMeta2","ClassComment":"","MethodFullName":"SubPointSolutions.Docs.Views.MetaPack.Index.Create_Package_SPMeta2","ClassFullName":"SubPointSolutions.Docs.Views.MetaPack.Index","MethodParametersCount":0,"SourceFileName":"index.cs","SourceFileNameWithoutExtension":"index"}